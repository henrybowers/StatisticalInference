help.start
help.start()
mean(abs(rnorm(100)))
rnorm(10)
source("z.R")
dir
dir()
source("z.R")
x<-c(1,2,4)
x
q<-c(x,x,8)
q
x
x[3]
x[2:3]
mean(x)
var(x)
sd(x)
data()
mean(Nile)
sd(Nile)
hist(Nile)
x<-cars
x
hist(x)
x[2]
hist(x,dist)
hist(x:dist)
save.image("C:\\Users\\Henry\\Documents\\Revolution\\first-workspace")
clr
clear
clear()
clr()
source("oddcount.R")
source("oddcount.R")
oddcount(c(1,3,5))
oddcount(1,2,3,4,5)
l<-list(2,"abc")
l
hist(cars$distance)
cars
hist(cars$dist)
hist(cars$speed)
str(cars)
save.image("C:\\Users\\Henry\\Documents\\Revolution\\learning")
objects()
load("C:\\Users\\Henry\\Documents\\Projects\\Titanic\\.RData")
objects()
rm(l,oddcount,q,x)
objects()
train
train
utils:::menuInstallPkgs()
help(mlr)
??mlr
utils:::menuShowCRAN()
install(randomForest)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
??nnet
help(nnet)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
help(nlme)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
help(LearnBayes)
??LearnBayes
resultframe = data.frame(Good.Loan=creditdata$Good.Loan,pred=predict(-model, type="class"))
demo()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
ls()
help train
help(class(train))
summary(train)
model = rpart(survived ~ pclass + sex + age + fare + embarked, data=train, control=rpart.control(maxdepth=4),method="class")
help(rpart)
??rpart
utils:::menuInstallPkgs()
model = rpart(survived ~ pclass + sex + age + fare + embarked, data=train, control=rpart.control(maxdepth=4),method="class")
help(rpart)
??rpart
?pkg::rpart
??rpart
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
model = rpart(survived ~ pclass + sex + age + fare + embarked, data=train, control=rpart.control(maxdepth=4),method="class")
rtab
rtab = table(resultframe)
model
plot.rpart(model)
rpart
?rpart::plot.rpart
plot(model)
?labels.rpart
labels(model)
model-labels = labels(model)
model_labels = labels(model)
plot(fit, compress=TRUE)
plot(model, compress = TRUE)
text(model, use.n = TRUE)
model = rpart(survived ~ sex + age + fare + embarked, data=train, control=rpart.control(maxdepth=5),method="class")
rtab = table(resultframe)
rtab = table(model)
model
?rpart
plot(model, compress=TRUE)
text(model, use.n=TRUE)
?text.rpart
text(model)
plot.new
plot.new(model)
plot(model)
text(model)
summary(model)
model = rpart(survived ~ sex + age + fare + embarked, data=train, control=rpart.control(maxdepth=10),method="class")
model
describe(model)
summary(model)
?rpart.summary
?summary.rpart
?rpart
model = rpart(survived ~ sex + age + fare + embarked + pclass + parch + ticket, data=train, control=rpart.control(maxdepth=10),method="class")
print(model)
model = rpart(survived ~ sex + age + fare + embarked + pclass + parch, data=train, control=rpart.control(maxdepth=10),method="class")
model
plot(model)
text(model)
summary(train)
describe(train)
train
load("C:\\Users\\Henry\\Documents\\Projects\\Titanic\\.RData")
summary test
summary $test
$test summary
help.start
help.start()
mean(abs(rnorm(100)))
rnorm(10)
source("z.R")
dir
dir()
source("z.R")
x<-c(1,2,4)
x
q<-c(x,x,8)
q
x
x[3]
x[2:3]
mean(x)
var(x)
sd(x)
data()
mean(Nile)
sd(Nile)
hist(Nile)
x<-cars
x
hist(x)
x[2]
hist(x,dist)
hist(x:dist)
save.image("C:\\Users\\Henry\\Documents\\Revolution\\first-workspace")
clr
clear
clear()
clr()
source("oddcount.R")
source("oddcount.R")
oddcount(c(1,3,5))
oddcount(1,2,3,4,5)
l<-list(2,"abc")
l
hist(cars$distance)
cars
hist(cars$dist)
hist(cars$speed)
str(cars)
save.image("C:\\Users\\Henry\\Documents\\Revolution\\learning")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
update.packages(ask='graphics')
utils:::menuInstallLocal()
load?
scan
save.image("C:\\Users\\Henry\\Documents\\Projects\\Titanic\\Titanic")
scan train.csv
help("scan")
scan "train.csv"
help("scan")
scan("
train.csv")
scan("C:\\Users\\Henry\\Documents\\Projects\\Titanic\\train.csv")
help("scan")
getwd()
setwd(C:/Users/Henry/Documents/Projects/Titanic")
help("setwd")
setwd(C:/Users/Henry/Documents/Projects/Titanic)
setwd(C:\\Users\\Henry\\Documents\\Projects\\Titanic)
setwd(
)
setwd("C:/Users/Henry/Documents/Projects/Titanic")
getwd
getwd()
scan(
"train.csv")
help("scan")
cat(file="train.csv",skip=1,sep=",")
ls()
l
q
x
Help(read.table)
read.table(help)
read.table("train.csv")
help("read.table")
read.table("train.csv",header=TRUE, sep=",")
read.table("train.csv",header=TRUE, sep=",")
ls()
x
train<-read.table("train.csv",header=TRUE, sep=",")
train
save.image("C:\\Users\\Henry\\Documents\\Projects\\Titanic\\Titanic")
ls()
summary model
help.start()
summary(model$)
summary(model)
table
l
l
train
library(ggplot)
library(ggplot2)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
update.packages(ask='graphics')
ggplot(train) + geom_histogram(aes(x=age), binwidth=5, fill="blue")
utils:::menuInstallPkgs()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
ggplot(train) + geom_histogram(aes(x=age), binwidth=5, fill="blue")
ggplot(train) + geom_density(aes(x=age)) + scale_x_continuous
ggplot(train) + geom_density(aes(x=age))
summary(table$age)
summary(table)
summary(train$age)
train$age
train2 <- subset(train, (custdata$age >= 1))
train2 <- subset(train, (train$age >= 1))
cor(train2$age, train2$survived)
ggplot(train2,aes(x=age,y=survived))+geom_point()
ggplot(train2,aes(x=age,y=as.numeric(survived)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
train2
train2
train2
train2
train2
ggplot(train2,aes(x=fare,y=as.numeric(survived)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
corr(train2$age,train2$fare)
cor(train2$age,train2$fare)
help.cor
?help.cor
??help.cor
help.start()
summary(train2)
cor(train2$pclass,train2$fare)
ggplot(train2,aes(x=pclass,y=as.numeric(survived)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
ggplot(train2,aes(x=as.numeric(sex),y=as.numeric(survived)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
ggplot(train2)+geom_bar(aes(x=sex,fill=survived))
ggplot(train2)+geom_bar(aes(x=survived,fill=sex))
ggplot(train2,aes(x=fare,y=as.numeric(sex)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
ggplot(train2)+geom_bar(aes(x=fare,fill=sex))
num_f_survived <- count(train2,"sex")
count(train2,"sex")
count(train2,"sex","survived")
count(train2,"sex"=0)
count(train2,"sex"="male")
count(train2,"sex","survived")/count(train2,"sex")
195/259
88/448
ggplot(train2,aes(x=fare,y=as.numeric(survived)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
ggplot(train2,aes(x=fare,y=as.numeric(pclass)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
ggplot(train2) + geom_bar(aes(x=pclass),fill="survived")
ggplot(train2) + geom_bar(aes(x=pclass),fill=survived)
ggplot(train2) + geom_bar(aes(x=pclass),fill=survived))
ggplot(train2) + geom_bar(aes(x=pclass,fill=survived))
ggplot(train2) + geom_bar(aes(x=survived,fill=pclass))
ggplot(train2) + geom_bar(aes(x=as.numeric(survived),fill=pclass))
ggplot(train2) + geom_bar(aes(x=pclass,fill=as.numeric(survived)))
ggplot(train2) + geom_bar(aes(x=as.factor(pclass),fill=as.numeric(survived)))
ggplot(train2) + geom_bar(aes(x=as.numeric(survived)as.factor(pclass)as.factor(pclass),fill=as.numeric(survived)))
ggplot(train2) + geom_bar(aes(x=as.numeric(survived),fill=as.factor(pclass)))
count(train2,"pclass","survived")/count(train2,"pclass")
count(train2,"pclass","survived")
121/(121+80+82)
ggplot(train2,aes(x=age,y=as.numeric(survived)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
ggplot(train2)+geom_bar(aes(x=as.factor(pclass),fill=survived),position="fill")
ggplot(train2)+geom_bar(aes(x=as.factor(pclass),fill=as.boolean(survived)),position="fill")
ggplot(train2)+geom_bar(aes(x=as.factor(pclass),fill=as.factor(survived)),position="fill")
ggplot(train2,aes(x=age,y=as.numeric(survived)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
brks<-c(0,5,10,2,60,Inf)
train2$age_bin<-cut(train2$age,breaks=brks,include.lowest=T)
summary(train2$age_bin)
ggplot(train2,aes(x=age_bin,y=as.numeric(survived)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
ggplot(train2)+geom_bar(aes(x=age_bin,fill=as.factor(survived)),position="fill")
ggplot(train2)+geom_bar(aes(x=age_bin,y=as.factor(pclass),fill=as.factor(survived)),position="fill")
ggplot(train2)+geom_bar(aes(x=age_bin,y=pclass,fill=as.factor(survived)),position="fill")
ggplot(train2)+geom_bar(aes(y=age_bin,x=pclass,fill=as.factor(survived)),position="fill")
ggplot(train2)+geom_bar(aes(x=age_bin,fill=as.factor(pclass)),position="fill")
ggplot(train2)+geom_bar(aes(x=age_bin,y=as.factor(pclass),fill=as.factor(survived)),position="fill")
ggplot(train2)+geom_bar(aes(x=age_bin,fill=as.factor(survived)),position="fill")
library('rpart')
?help rpart
help(rpart)
fit1<-rpart(survived ~ age_bin + rate + age,data=train2)
fit1<-rpart(survived ~ age_bin + fare + age,data=train2)
summary fit1
summary(fit1)
print.rpart(fit1)
print(fit1)
fit1<-rpart(survived ~ age_bin + as.factor(ppclass) + sex,data=train2)
fit1<-rpart(survived ~ age_bin + as.factor(pclass) + sex,data=train2)
print(fit1)
summary(train2)
fit1<-rpart(survived ~ age_bin + as.factor(pclass) + sex + sibsp + rate,data=train2)
fit1<-rpart(survived ~ age_bin + as.factor(pclass) + sex + sibsp + fare,data=train2)
print(fit1)
plot(fit2)
plot(fit1)
help(plot.rpart)
text(fit1,use.n=TRUE)
plot(fit,compress=TRUE)
plot(fit1,compress=TRUE)
text(fit1,use.n=TRUE)
plot(fit1,compress=TRUE,margin=5)
plot(fit1,margin=5)
text(fit1,use.n=TRUE)
plot(fit1,compress=TRUE,margin=1)
text(fit1,use.n=TRUE)
summary(train2)
ggplot(train2,aes(x=fare,y=as.numeric(survived)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
summary(train2$parch)
fit1<-rpart(survived ~ age_bin + as.factor(pclass) + sex + sibsp + fare,data=train2)
fit1<-rpart(survived ~ age_bin + as.factor(pclass) + sex + as.factor(sibsp) + as.factor(parch) + fare,data=train2)
print(fit1)
ggplot(train2,aes(x=parch,y=as.numeric(survived)))+geom_point(position=position_jitter(w=0.05,h=0.05))+geom_smooth()
fit1<-rpart(survived ~ age_bin + as.factor(pclass) + sex + sibsp + parch + fare,data=train2)
print(fit1)
help(rpart)
fit1<-rpart(survived ~ age_bin + as.factor(pclass) + sex + sibsp + parch + fare,data=train2,model=class)
fit1<-rpart(survived ~ age_bin + as.factor(pclass) + sex + sibsp + parch + fare,data=train2,model="class")
fit1<-rpart(survived ~ age_bin + as.factor(pclass) + sex + sibsp + parch + fare,data=train2,method="class")
print(fit1)
fit1<-rpart(survived ~ age_bin + as.factor(pclass) + sex + sibsp + parch + fare,data=train2,method="exp")
fit1<-rpart(survived ~ age_bin + as.factor(pclass) + sex + sibsp + parch + fare,data=train2,method="anova")
print(fit1)
save.image("C:\\Users\\Henry\\Documents\\Projects\\Titanic\\titanic-131123.RData")
install.packages("cubist")
install.packages("Cubist")
library(Cubist)
install.packages("arules")
libary(arules)
library(arules)
head(rownames(a),3)
a<-available.packages()
head(rownames(a),3)
search()
find.packages(devtools)
find_rtools()
install.packages("devtools")
install.packages("R.matlab")
library(R.matlab)
set.seed(1)
rpois(5,2)
Ni <- rpois(50, lambda = 4); table(factor(Ni, 0:max(Ni)))
set.seed(1)
for i in 1:5 {
rpois(5,2)
}
for i = 1:5 {
for (i in 1:5) {
rpois(5,2)
}
set.seed(1)
for (i in 1:5) {
rpois(5,2)
}
set.seed(1)
for (i in 1:5) {
print(rpois(5,2))
}
dnorm(5,1,1)
dnorm(mean=1,sd=1)
dnorm(4,mean=1,sd=1)
pnorm(4,1,1)
rnorm(4,1,1)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
plot(x)
set.seed(10)
x <- rbinom(100, 10, 0.5)
e <- rnorm(100, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
source('~/.active-rstudio-document', echo=TRUE)
set.seed(10)
x <- rnorm(100, 10, 0.5)
e <- rnorm(100, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
source('~/.active-rstudio-document', echo=TRUE)
x <- rbinom(100, 100, 0.5)
plot(x)
source('~/.active-rstudio-document', echo=TRUE)
x <- rbinom(100, 10, 0.5)
plot(x)
e <- rnorm(100, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
plot(e)
plot(x,y)
load("~/Projects/Getting-Cleaning-Data/Project/project.RData")
load("~/Projects/Getting-Cleaning-Data/.RData")
load("~/Projects/Getting-Cleaning-Data/Project/wearable/.RData")
library(datasets)
data(airquality)
qplot(Wind,Ozone,data=airquality,facets= . ~ factor(Month))
install.packages('ggplot2')
library(ggplot2)
install.packages('colorspace')
library(ggplot2)
install.packages('scales')
library(ggplot2)
qplot(Wind,Ozone,data=airquality,facets= . ~ factor(Month))
install.packages('proto')
install.packages(c("DBI", "formatR", "gsubfn", "htmltools", "httr", "jsonlite", "labeling", "markdown", "mime", "R.utils", "RCurl", "swirl", "xlsxjars"))
install.packages("proto")
library(ggplot2)
qplot(Wind,Ozone,data=airquality,facets= . ~ factor(Month))
airquality<-transform(airquality,Month=factor(Month))
qplot(Wind,Ozone,data=airquality,facets=.~Month)
install.packages('gtable')
install.packages("gtable")
qplot(Wind,Ozone,data=airquality,facets=.~Month)
library(ggplot2)
qplot(Wind,Ozone,data=airquality,facets=.~Month)
ggplot(movies,aes(votes,rating))
data(movies)
ggplot(movies,aes(votes,rating))
qplot(votes,rating,data=movies)
qplot(votes,rating,data=movies,smooth="loess")
qplot(votes,rating,data=movies) + geom_smooth()
setwd("./GPR/Research-improve-opps-report")
setwd("E:\Research-improve-opps-report")
getwd
getwd()
installpackages("CodeDepends","Rgraphviz")
install.packages("CodeDepends","Rgraphviz")
install.packages("CodeDepends")
3.5^2
- $E[X^2] = 1 ^ 2 \times \frac{1}{6} + 2 ^ 2 \times \frac{1}{6} + 3 ^ 2 \times \frac{1}{6} + 4 ^ 2 \times \frac{1}{6} + 5 ^ 2 \times \frac{1}{6} + 6 ^ 2 \times \frac{1}{6} = 15.17$
E[X^2] = 1 ^ 2 \times \frac{1}{6} + 2 ^ 2 \times \frac{1}{6} + 3 ^ 2 \times \frac{1}{6} + 4 ^ 2 \times \frac{1}{6} + 5 ^ 2 \times \frac{1}{6} + 6 ^ 2 \times \frac{1}{6} = 15.17
library(ggplot2)
nosim <- 10000;
dat <- data.frame(
x = c(apply(matrix(rnorm(nosim * 10), nosim), 1, var),
apply(matrix(rnorm(nosim * 20), nosim), 1, var),
apply(matrix(rnorm(nosim * 30), nosim), 1, var)),
n = factor(rep(c("10", "20", "30"), c(nosim, nosim, nosim)))
)
ggplot(dat, aes(x = x, fill = n)) + geom_density(size = 2, alpha = .2) + geom_vline(xintercept = 1, size = 2)
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, var),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, var),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, var)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black")
g <- g + geom_vline(xintercept = 2.92, size = 2)
g + facet_grid(. ~ size)
setwd("~/Projects/StatisticalInferencing/StatisticalInference")
